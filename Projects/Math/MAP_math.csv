org.apache.commons.math4.analysis.interpolation.BicubicInterpolator.interpolate(double[],double[],double[][]);org.apache.commons.math4.analysis.interpolation.BicubicInterpolatorTest.testPreconditions();org.apache.commons.math4.analysis.interpolation.BicubicInterpolatingFunctionTest.testPlane();org.apache.commons.math4.analysis.interpolation.BicubicInterpolatingFunctionTest.testParaboloid();;;;;;;;;
org.apache.commons.math4.analysis.FunctionUtils.sample(UnivariateFunction,double,double,int);org.apache.commons.math4.analysis.FunctionUtilsTest.testSampleWrongBounds();org.apache.commons.math4.analysis.FunctionUtilsTest.testSampleNegativeNumberOfPoints();org.apache.commons.math4.analysis.FunctionUtilsTest.testSampleNullNumberOfPoints();org.apache.commons.math4.analysis.FunctionUtilsTest.testSample();;;;;;;;
org.apache.commons.math4.analysis.differentiation.JacobianFunction.value(double[]);org.apache.commons.math4.analysis.differentiation.JacobianFunctionTest.testSphere();;;;;;;;;;;
org.apache.commons.math4.analysis.polynomials.PolynomialFunction.subtract(PolynomialFunction);org.apache.commons.math4.analysis.polynomials.PolynomialFunctionTest.testSubtraction();org.apache.commons.math4.analysis.polynomials.PolynomialsUtilsTest.testJacobiLegendre();;;;;;;;;;
org.apache.commons.math4.analysis.differentiation.FiniteDifferencesDifferentiator.FiniteDifferencesDifferentiator(int,double,double,double);org.apache.commons.math4.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testTooLargeStep();org.apache.commons.math4.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testBounds();org.apache.commons.math4.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testBoundedSqrt();;;;;;;;;
org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateFunction,double,double,double,double,double,int);org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketCentered();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLow();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketHigh();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLinear();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketExponential();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBadAdditive();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testIterationExceeded();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketSin();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketEndpointRoot();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testNullFunction();org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBadMaximumIterations()
org.apache.commons.math4.dfp.DfpMath.pow(Dfp,int);org.apache.commons.math4.analysis.solvers.FieldBracketingNthOrderBrentSolverTest.testNeta();;;;;;;;;;;
org.apache.commons.math4.filter.KalmanFilter.predict(RealVector);org.apache.commons.math4.filter.KalmanFilterTest.testConstantAcceleration();org.apache.commons.math4.filter.KalmanFilterTest.testCannonball();org.apache.commons.math4.filter.KalmanFilterTest.testConstant();;;;;;;;;
org.apache.commons.math4.dfp.Dfp.toDouble();org.apache.commons.math4.analysis.function.SincTest.testShortcut();org.apache.commons.math4.analysis.function.SincTest.testDerivativeShortcut();;;;;;;;;;
org.apache.commons.math4.dfp.Dfp.divide(int);org.apache.commons.math4.analysis.solvers.FieldBracketingNthOrderBrentSolverTest.testConvergenceOnFunctionAccuracy();;;;;;;;;;;
org.apache.commons.math4.genetics.ListPopulation.getFittestChromosome();org.apache.commons.math4.genetics.GeneticAlgorithmTestBinary.test();org.apache.commons.math4.genetics.GeneticAlgorithmTestPermutations.test();org.apache.commons.math4.genetics.ListPopulationTest.testGetFittestChromosome();;;;;;;;;
org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.MultivariateNormalMixtureExpectationMaximization(double[][]);org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testNonEmptyData();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testNonJaggedData();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testMultipleColumnsRequired();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testMaxIterationsPositive();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testThresholdPositive();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testConvergenceException();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testIncompatibleIntialMixture();org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testFit();;;;
org.apache.commons.math4.dfp.Dfp.nextAfter(Dfp);org.apache.commons.math4.dfp.DfpTest.testNextAfter();;;;;;;;;;;
org.apache.commons.math4.genetics.ElitisticListPopulation.nextGeneration();org.apache.commons.math4.genetics.ElitisticListPopulation.nextGeneration();org.apache.commons.math4.genetics.ElitisticListPopulationTest.testNextGeneration();;;;;;;;;;
